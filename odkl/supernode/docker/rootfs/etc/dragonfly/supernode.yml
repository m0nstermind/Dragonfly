base:
  # CDNPattern cdn pattern which must be in ["local", "source"].
  # local will try to pull a file from sourve and cache it on local disk of supernode
  # source will redirect peers to get a file directly from sourv without caching it first on supernode

  # ODKL registries are located in datacenters next to minions there is no point on caching them on supernode
  cdnPattern: source
  listenPort: 5002
  # port for download files from supernode
  # ODKL: not used
  # downloadPort: 5003
  # working directory of supernode
  homeDir: /mnt/supernode
  # the core pool size of ScheduledExecutorService.
  # When a request to start a download task, supernode will construct a thread concurrent pool
  # to download pieces of source file and write to specified storage.
  # Note: source file downloading is into pieces via range attribute set in HTTP header.
  # default: 10
  # schedulerCorePoolSize: 10
  # specifies the path where to store downloaded files from source address.
  # ODKL: not used
  downloadpath: /mnt/supernode/repo/download
  peerUpLimit: 5
  peerDownLimit: 4
  # When dfget node starts to play a role of peer, it will provide services for other peers
  # to pull pieces. If it runs into an issue when providing services for a peer, its self failure
  # increases by 1. When the failure limit reaches EliminationLimit, the peer will isolate itself
  # as a unhealthy state. Then this dfget will be no longer called by other peers.
  # eliminationLimit: 5
  # FailureCountLimit is the failure count limit set in supernode for dfget client.
  # When a dfget client takes part in the peer network constructed by supernode,
  # supernode will command the peer to start distribution task.
  # When dfget client fails to finish distribution task, the failure count of client
  # increases by 1. When failure count of client reaches to FailureCountLimit(default 5),
  # dfget client will be moved to blacklist of supernode to stop playing as a peer.
  #failureCountLimit: 5
  # LinkLimit is set for supernode to limit every piece download network speed.
  # default: 20 MB, in format of G(B)/g/M(B)/m/K(B)/k/B, pure number will also be parsed as Byte.
  linkLimit: 0
  # SystemReservedBandwidth is the network bandwidth reserved for system software.
  #	default: 20 MB, in format of G(B)/g/M(B)/m/K(B)/k/B, pure number will also be parsed as Byte.
  # used for local CDN only
  # systemReservedBandwidth: 0
  # MaxBandwidth is the network bandwidth that supernode can use.
  # default: 200 MB, in format of G(B)/g/M(B)/m/K(B)/k/B, pure number will also be parsed as Byte.
  # used for local CDN only
  # maxBandwidth: 0
  # enables the following URIs of internal profiler ( debug: true does the same ):
  # /debug/pprof/cmdline
  #	/debug/pprof/profile
  #	/debug/pprof/symbol
  #	/debug/pprof/trace
  #	/debug/pprof/
  enableProfiler: false
  # Whether to open DEBUG level
  debug: true
  # Transfer will be retried after this timeout since last failed to access the URL
  failAccessInterval: 1m0s
  gcInitialDelay: 6s
  gcMetaInterval: 2m0s
  # TaskExpireTime when a task is not accessed within the taskExpireTime,
  # and it will be treated to be expired.
  # default: 3min
  # ODKL: the deploy timeout is 5 minutes
  taskExpireTime: 5m0s
  # PeerGCDelay is the delay time to execute the GC after the peer has reported the offline.
  # default: 3min
  peerGCDelay: 1m0s
  # the interval time to execute GC disk ( to remove tasks from disk ).
  gcDiskInterval: 15s
  # No disk GC will be performed if the available disk space is more than YoungGCThreshold
  #	default: 100GB
  youngGCThreshold: 100GB
  # Force to perform disk GC if the available disk space is less than fullGCThreshold
  fullGCThreshold: 5GB
  # the threshold of the interval at which the task file is accessed
  IntervalThreshold: 2h0m0s
  # how many 10%s of disk to clean dirung a single GC
  cleanratio: 1
